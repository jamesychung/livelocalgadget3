import { Button } from "@/components/ui/button";
import { Card } from "@/components/ui/card";
import { Pencil } from "lucide-react";
import { useOutletContext, useNavigate } from "react-router";
import { useEffect } from "react";
import type { AuthOutletContext } from "./_app";

export default function () {
  const { gadgetConfig, user } = useOutletContext<AuthOutletContext>();
  const navigate = useNavigate();

  useEffect(() => {
    if (user) {
      // Get user's primary role
      const userRoles = Array.isArray(user.roles) 
        ? user.roles.map((role: unknown) => typeof role === 'string' ? role : 
            (role as any)?.name || (role as any)?.key || String(role))
        : [];
      
      let primaryRole = userRoles.find((role: string) => role !== 'signed-in') || 'user';
      
      // If primaryRole field is set and not 'user', use that instead
      if (user.primaryRole && user.primaryRole !== 'user') {
        primaryRole = user.primaryRole;
      }

      console.log("User roles:", userRoles);
      console.log("Primary role:", primaryRole);

      // Redirect based on role
      switch (primaryRole) {
        case 'musician':
          navigate('/musician-dashboard');
          break;
        case 'venue':
          navigate('/venue-dashboard');
          break;
        default:
          // Stay on this page for users without specific roles
          break;
      }
    }
  }, [user, navigate]);

  return (
    <div className="container mx-auto p-6">
      <div className="grid gap-6">
        <div>
          <Card className="overflow-hidden">
            <div className="flex items-start justify-between p-6">
              <div className="space-y-4">
                <h2 className="text-2xl font-bold">You are now signed in</h2>
                <div className="space-y-2">
                  <p className="text-base">{"Start building your app's signed in area."}</p>
                </div>
                <Button variant="outline" asChild>
                  <a href="/edit/files/web/routes/_app.signed-in.tsx" target="_blank">
                    <Pencil className="mr-2 h-4 w-4" />
                    Edit this page
                  </a>
                </Button>
              </div>
              <img
                src="https://assets.gadget.dev/assets/default-app-assets/react-logo.svg"
                className="app-logo h-24 w-24 animate-spin"
                style={{ animationDuration: "10s" }}
                alt="logo"
              />
            </div>
          </Card>
        </div>
        <Card className="p-6">
          <div className="space-y-6">
            <h2 className="text-xl font-semibold">Current user</h2>
            <dl className="grid grid-cols-1 gap-4 sm:grid-cols-2">
              <div>
                <dt className="text-sm font-medium text-muted-foreground">ID</dt>
                <dd className="text-base">{user.id}</dd>
              </div>
              <div>
                <dt className="text-sm font-medium text-muted-foreground">Name</dt>
                <dd className="text-base">{`${user.firstName} ${user.lastName}`}</dd>
              </div>
              <div>
                <dt className="text-sm font-medium text-muted-foreground">Email</dt>
                <dd className="text-base">
                  <a href={`mailto:${user.email}`} className="text-primary hover:underline">
                    {user.email}
                  </a>
                </dd>
              </div>
              <div>
                <dt className="text-sm font-medium text-muted-foreground">Created</dt>
                <dd className="text-base">{user.createdAt.toLocaleString("en-US", { timeZone: "UTC" })} (in UTC)</dd>
              </div>
              <div>
                <dt className="text-sm font-medium text-muted-foreground">Roles</dt>
                <dd className="text-base">
                  {Array.isArray(user.roles) 
                    ? user.roles.map((role: unknown) => typeof role === 'string' ? role : 
                        (role as any)?.name || (role as any)?.key || String(role)).join(', ')
                    : 'No roles'}
                </dd>
              </div>
              <div>
                <dt className="text-sm font-medium text-muted-foreground">Primary Role</dt>
                <dd className="text-base">{user.primaryRole || 'Not set'}</dd>
              </div>
            </dl>
            <div className="space-y-4">
              <p className="text-sm text-muted-foreground">
                This data is fetched from your{" "}
                <a href="/edit/model/user/data" target="_blank" className="text-primary hover:underline">
                  user
                </a>{" "}
                via your autogenerated API.
              </p>
            </div>
          </div>
        </Card>
      </div>
    </div>
  );
}