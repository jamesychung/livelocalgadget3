{"version":3,"sources":["/var/gadget/codegen/framework-1750396385883-9uj1EN/src/models/Event.ts"],"sourcesContent":["// All the generated types for the \"event\" model preconditions, actions, params, etc\nimport { AmbientContext } from \"../AmbientContext.js\";\nimport { ActionExecutionScope, NotYetTyped, ValidationErrors, ActionTrigger, TriggerWithType } from \"../types.js\";\nimport type { Scalars } from \"@gadget-client/livelocalgadget3\";\nimport { GadgetRecord, Event } from \"@gadget-client/livelocalgadget3\";\nimport { Select } from \"@gadgetinc/api-client-core\";\n\nexport type DefaultEventServerSelection = {\n  readonly __typename: true;\n      readonly id: true;\n      readonly createdAt: true;\n      readonly updatedAt: true;\n      readonly availableTickets: true;\n      readonly category: true;\n      readonly createdById: true;\n    readonly createdBy: false;\n      readonly date: true;\n      readonly description: true;\n      readonly endTime: true;\n      readonly image: true;\n      readonly isActive: true;\n      readonly isPublic: true;\n      readonly musicianId: true;\n    readonly musician: false;\n      readonly setlist: true;\n      readonly startTime: true;\n      readonly status: true;\n      readonly ticketPrice: true;\n      readonly ticketType: true;\n      readonly title: true;\n      readonly totalCapacity: true;\n      readonly venueId: true;\n    readonly venue: false;\n  };\n\n"],"names":[],"mappings":"AAAA,oFAAoF;AAOpF,WA0BI"}