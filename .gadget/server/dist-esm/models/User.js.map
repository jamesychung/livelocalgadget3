{"version":3,"sources":["/var/gadget/codegen/framework-1750900813426-uvcvy8/src/models/User.ts"],"sourcesContent":["// All the generated types for the \"user\" model preconditions, actions, params, etc\nimport { AmbientContext } from \"../AmbientContext.js\";\nimport { ActionExecutionScope, NotYetTyped, ValidationErrors, ActionTrigger, TriggerWithType } from \"../types.js\";\nimport type { Scalars } from \"@gadget-client/livelocalgadget6\";\nimport { GadgetRecord, User } from \"@gadget-client/livelocalgadget6\";\nimport { Select } from \"@gadgetinc/api-client-core\";\n\nexport type DefaultUserServerSelection = {\n  readonly __typename: true;\n      readonly id: true;\n      readonly createdAt: true;\n      readonly updatedAt: true;\n      readonly email: true;\n      readonly emailVerificationToken: true;\n      readonly emailVerificationTokenExpiration: true;\n      readonly emailVerified: true;\n      readonly firstName: true;\n      readonly googleImageUrl: true;\n      readonly googleProfileId: true;\n      readonly lastName: true;\n      readonly password: true;\n      readonly lastSignedIn: true;\n      readonly profilePicture: true;\n      readonly resetPasswordTokenExpiration: true;\n      readonly resetPasswordToken: true;\n      readonly roles: true;\n  };\n\n  \n/** Context of the `signUp` action on the `user` model. */\nexport interface SignUpUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"user_sign_up\"> | TriggerWithType<\"google_oauth_signup\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\n    \n\n};\n  /**\n  * @private The context of this action.\n  */\n  context: SignUpUserActionContext;\n};\n\n\n    \n/** Context of the `signIn` action on the `user` model. */\nexport interface SignInUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"user_sign_in\"> | TriggerWithType<\"google_oauth_signin\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\n    \n\n};\n  /**\n  * @private The context of this action.\n  */\n  context: SignInUserActionContext;\n};\n\n\n    \n/** Context of the `signOut` action on the `user` model. */\nexport interface SignOutUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"user_sign_out\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\nid?: string;\n};\n  /**\n  * @private The context of this action.\n  */\n  context: SignOutUserActionContext;\n};\n\n\n    \n/** Context of the `update` action on the `user` model. */\nexport interface UpdateUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\nuser?: { email?: string;emailVerificationToken?: string;emailVerificationTokenExpiration?: Date;emailVerified?: boolean;firstName?: string;googleImageUrl?: string;googleProfileId?: string;lastName?: string;password?: string;lastSignedIn?: Date;profilePicture?: { fileName: string; byteSize: number; mimeType: string; storageToken: string; url: string };resetPasswordTokenExpiration?: Date;resetPasswordToken?: string;roles?: string[]; };    \nid?: string;\n};\n  /**\n  * @private The context of this action.\n  */\n  context: UpdateUserActionContext;\n};\n\n\n    \n/** Context of the `delete` action on the `user` model. */\nexport interface DeleteUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\nid?: string;\n};\n  /**\n  * @private The context of this action.\n  */\n  context: DeleteUserActionContext;\n};\n\n\n    \n/** Context of the `sendVerifyEmail` action on the `user` model. */\nexport interface SendVerifyEmailUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"user_send_verify_email\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\n\n} & {\nuser?: { emailVerified?: boolean;emailVerificationToken?: string;emailVerificationTokenExpiration?: Date;emailVerificationCode?: string; };\n};\n  /**\n  * @private The context of this action.\n  */\n  context: SendVerifyEmailUserActionContext;\n};\n\n\n    \n/** Context of the `verifyEmail` action on the `user` model. */\nexport interface VerifyEmailUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"user_verify_email\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\ncode?: string;\n};\n  /**\n  * @private The context of this action.\n  */\n  context: VerifyEmailUserActionContext;\n};\n\n\n    \n/** Context of the `sendResetPassword` action on the `user` model. */\nexport interface SendResetPasswordUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"user_send_reset_password\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\n\n} & {\nuser?: { resetPasswordToken?: string;resetPasswordTokenExpiration?: Date;resetPasswordCode?: string; };\n};\n  /**\n  * @private The context of this action.\n  */\n  context: SendResetPasswordUserActionContext;\n};\n\n\n    \n/** Context of the `resetPassword` action on the `user` model. */\nexport interface ResetPasswordUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"user_reset_password\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\n    \ncode?: string;\n};\n  /**\n  * @private The context of this action.\n  */\n  context: ResetPasswordUserActionContext;\n};\n\n\n    \n/** Context of the `changePassword` action on the `user` model. */\nexport interface ChangePasswordUserActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `user` record this action is operating on.\n  */\n  record: GadgetRecord<Select<User, DefaultUserServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"user_change_password\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\nid?: string;    \n    \n\n};\n  /**\n  * @private The context of this action.\n  */\n  context: ChangePasswordUserActionContext;\n};\n\n\n  "],"names":[],"mappings":"AAAA,mFAAmF;AA6BnF,wDAAwD,GAEtD;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAKA;;EAEA,GAMF,wDAAwD,GAEtD;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAKA;;EAEA,GAMF,yDAAyD,GAEvD;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAIA;;EAEA,GAMF,wDAAwD,GAEtD;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAKA;;EAEA,GAMF,wDAAwD,GAEtD;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAIA;;EAEA,GAMF,iEAAiE,GAE/D;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAMA;;EAEA,GAMF,6DAA6D,GAE3D;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAIA;;EAEA,GAMF,mEAAmE,GAEjE;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAMA;;EAEA,GAMF,+DAA+D,GAE7D;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAKA;;EAEA,GAMF,gEAAgE,GAChE,WA6BC,CA5BC;;EAEA,IAEA;;EAEA,IAEA;;EAEA,IAEA;;EAEA,IAEA;;EAEA,IAMA;;EAEA"}