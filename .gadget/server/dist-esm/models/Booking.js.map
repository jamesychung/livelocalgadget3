{"version":3,"sources":["/var/gadget/codegen/framework-1751338482029-OoEVjq/src/models/Booking.ts"],"sourcesContent":["// All the generated types for the \"booking\" model preconditions, actions, params, etc\nimport { AmbientContext } from \"../AmbientContext.js\";\nimport { ActionExecutionScope, NotYetTyped, ValidationErrors, ActionTrigger, TriggerWithType } from \"../types.js\";\nimport type { Scalars } from \"@gadget-client/livelocalgadget6\";\nimport { GadgetRecord, Booking } from \"@gadget-client/livelocalgadget6\";\nimport { Select } from \"@gadgetinc/api-client-core\";\n\nexport type DefaultBookingServerSelection = {\n  readonly __typename: true;\n      readonly id: true;\n      readonly createdAt: true;\n      readonly updatedAt: true;\n      readonly bookedById: true;\n    readonly bookedBy: false;\n      readonly date: true;\n      readonly depositAmount: true;\n      readonly depositPaid: true;\n      readonly endTime: true;\n      readonly fullPaymentPaid: true;\n      readonly isActive: true;\n      readonly musicianId: true;\n    readonly musician: false;\n      readonly notes: true;\n      readonly specialRequirements: true;\n      readonly startTime: true;\n      readonly totalAmount: true;\n      readonly venueId: true;\n    readonly venue: false;\n      readonly musicianPitch: true;\n      readonly proposedRate: true;\n      readonly eventId: true;\n    readonly event: false;\n      readonly status: true;\n  };\n\n  \n/** Context of the `create` action on the `booking` model. */\nexport interface CreateBookingActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `booking` record this action is operating on.\n  */\n  record: GadgetRecord<Select<Booking, DefaultBookingServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\nid?: string;\n};\n  /**\n  * @private The context of this action.\n  */\n  context: CreateBookingActionContext;\n};\n\n\n    \n/** Context of the `update` action on the `booking` model. */\nexport interface UpdateBookingActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `booking` record this action is operating on.\n  */\n  record: GadgetRecord<Select<Booking, DefaultBookingServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\nid?: string;\n};\n  /**\n  * @private The context of this action.\n  */\n  context: UpdateBookingActionContext;\n};\n\n\n  "],"names":[],"mappings":"AAAA,sFAAsF;AAoCtF,2DAA2D,GAEzD;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAIA;;EAEA,GAMF,2DAA2D,GAC3D,WA2BC,CA1BC;;EAEA,IAEA;;EAEA,IAEA;;EAEA,IAEA;;EAEA,IAEA;;EAEA,IAIA;;EAEA"}