{"version":3,"sources":["/var/gadget/codegen/framework-1751246271536-yrfom6/src/models/Venue.ts"],"sourcesContent":["// All the generated types for the \"venue\" model preconditions, actions, params, etc\nimport { AmbientContext } from \"../AmbientContext.js\";\nimport { ActionExecutionScope, NotYetTyped, ValidationErrors, ActionTrigger, TriggerWithType } from \"../types.js\";\nimport type { Scalars } from \"@gadget-client/livelocalgadget6\";\nimport { GadgetRecord, Venue } from \"@gadget-client/livelocalgadget6\";\nimport { Select } from \"@gadgetinc/api-client-core\";\n\nexport type DefaultVenueServerSelection = {\n  readonly __typename: true;\n      readonly id: true;\n      readonly createdAt: true;\n      readonly updatedAt: true;\n      readonly state: true;\n      readonly events: false;\n      readonly bookings: false;\n      readonly additionalPictures: true;\n      readonly address: true;\n      readonly amenities: true;\n      readonly capacity: true;\n      readonly city: true;\n      readonly country: true;\n      readonly description: true;\n      readonly email: true;\n      readonly genres: true;\n      readonly hours: true;\n      readonly isActive: true;\n      readonly isVerified: true;\n      readonly name: true;\n      readonly ownerId: true;\n    readonly owner: false;\n      readonly phone: true;\n      readonly priceRange: true;\n      readonly profilePicture: true;\n      readonly rating: true;\n      readonly socialLinks: true;\n      readonly type: true;\n      readonly website: true;\n      readonly zipCode: true;\n      readonly reviews: false;\n  };\n\n  \n/** Context of the `create` action on the `venue` model. */\nexport interface CreateVenueActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `venue` record this action is operating on.\n  */\n  record: GadgetRecord<Select<Venue, DefaultVenueServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\nvenue?: { state?: string;additionalPictures?: Scalars[\"JSON\"];address?: string;amenities?: Scalars[\"JSON\"];capacity?: number;city?: string;country?: string;description?: string;email?: string;genres?: Scalars[\"JSON\"];hours?: Scalars[\"JSON\"];isActive?: boolean;isVerified?: boolean;name?: string;owner?: { _link: string | null };phone?: string;priceRange?: string;profilePicture?: string;rating?: number;socialLinks?: Scalars[\"JSON\"];type?: string;website?: string;zipCode?: string; };\n};\n  /**\n  * @private The context of this action.\n  */\n  context: CreateVenueActionContext;\n};\n\n\n    \n/** Context of the `update` action on the `venue` model. */\nexport interface UpdateVenueActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `venue` record this action is operating on.\n  */\n  record: GadgetRecord<Select<Venue, DefaultVenueServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\nvenue?: { state?: string;additionalPictures?: Scalars[\"JSON\"];address?: string;amenities?: Scalars[\"JSON\"];capacity?: number;city?: string;country?: string;description?: string;email?: string;genres?: Scalars[\"JSON\"];hours?: Scalars[\"JSON\"];isActive?: boolean;isVerified?: boolean;name?: string;owner?: { _link: string | null };phone?: string;priceRange?: string;profilePicture?: string;rating?: number;socialLinks?: Scalars[\"JSON\"];type?: string;website?: string;zipCode?: string; };    \nid?: string;\n};\n  /**\n  * @private The context of this action.\n  */\n  context: UpdateVenueActionContext;\n};\n\n\n    \n/** Context of the `findFirst` action on the `venue` model. */\nexport interface FindFirstVenueActionContext extends AmbientContext {\n  /**\n  * The model this action is operating on\n  */\n  model: NotYetTyped;\n  /**\n  * An object specifying the `venue` record this action is operating on.\n  */\n  record: GadgetRecord<Select<Venue, DefaultVenueServerSelection>>;\n  /**\n  * @deprecated Use 'return' instead.\n  */\n  scope: ActionExecutionScope;\n  /**\n  * An object specifying the trigger to this action (e.g. API call, webhook events etc.).\n  */\n  trigger: TriggerWithType<\"api\"> | TriggerWithType<\"background-action\">;\n  /**\n  * An object containing the incoming data(this models fields) passed by triggers or user inputs.\n  */\n  params: {\nid?: string;\n};\n  /**\n  * @private The context of this action.\n  */\n  context: FindFirstVenueActionContext;\n};\n\n\n  "],"names":[],"mappings":"AAAA,oFAAoF;AA0CpF,yDAAyD,GAEvD;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAIA;;EAEA,GAMF,yDAAyD,GAEvD;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAEA;;EAEA,GAKA;;EAEA,GAMF,4DAA4D,GAC5D,WA2BC,CA1BC;;EAEA,IAEA;;EAEA,IAEA;;EAEA,IAEA;;EAEA,IAEA;;EAEA,IAIA;;EAEA"}